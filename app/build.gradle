apply plugin: 'com.android.application'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    dataBinding {
        enabled = true
    }
    // 签名证书配置
    signingConfigs {

//        config {
//            keyAlias 'androiddebugkey'
//            keyPassword 'android'
//            storeFile file('key/platform.keystore')
//            storePassword 'android'
//        }

        platform {

            keyAlias 'key0'
            keyPassword 'android'
            storeFile file('C:/ASproject/CustomProject/app/key/platform.jks')
            storePassword 'android'

        }

    }
    defaultConfig {
        applicationId "cn.flyaudio.customproject"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        //targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [AROUTER_MODULE_NAME: project.getName()]

            }

        }
        // java代码编译选项 选择java8
        compileOptions {

            targetCompatibility JavaVersion.VERSION_1_8
            sourceCompatibility JavaVersion.VERSION_1_8

        }
        // vector向量图兼容支持
        vectorDrawables.useSupportLibrary = true

    }

    buildTypes {

        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.platform

        }

    }

    sourceSets {

        main{

        }
        
    }

}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(path: ':BaseLibrary')
    // 依赖module1
    api project(path: ':module1')
    // 如果不是一个组件(是一个Library)的话就依赖这个组件
    if(!rootProject.ext.isModule2.toBoolean()){
    // 依赖module2
        api project(path: ':module2')

    }
    //module1找不到这个module 无法添加
    //感觉这个module1 不是一个合法的module 在吗？你重新弄个一个module在，但这是一个依赖，不是一个单独的组件啊
    //你先在是想在app里依赖module1？至少Module1单独运行不会报错  app要依赖 module1
    // 要把apply plugin: 'com.android.application' 改成 apply plugin: 'com.android.library'
    //你要单独运行module1的时候就改回来，这下可以运行了，是什么错
    //这只是运行module1而已，另外还有一个问题为什么Arouter跨组件跳转会失败？
}
